Can you please help writing code for my visual novel kiseki framework from this logic:

'use strict'

const readline = require('readline');
const fs = require('fs');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout,
    terminal: true
});

// Read the .kiseki file
const kisekiContent = fs.readFileSync('novel.kiseki', 'utf-8');

// Split content into lines
const lines = kisekiContent.split('\n');

// Initialize variables
let currentEpisode = '';
let currentBranch = '';
let currentText = '';
let choices = [];
let choiceMade = false; // Flag to indicate if a choice was made

// Function to process a branch
function processBranch(lines, startIndex) {

}

// Start parsing from the beginning
processBranch(lines, 0);

// Find the index of a specific branch in the lines
function findBranchIndex(lines, branchName) {
}


novel.kiseki file:

title("Love Kizuna")
author("Yuki Arimo")

start()
    episode("Ep 1 - A Mysterious Beginning")
        text("Once upon a time...")
        text("In this world...")
    episode("Ep 2 - Unexpected Encounters")
        text("Hi there. Kizuna's voice chimed, the sound like a melodic echo in the tranquil surroundings. Their eyes met, and in that instant, a bond began to form.")
        choice("I love you Kizuna", "Reject Kizuna", "Be my girlfriend", "We break up", "Ignore Kizuna") => ("love_dialogue_1", "rejection", "love_dialogue_2", "end", "move")
        text("As the soft rays of dawn filtered through the trees, the protagonist awoke to find themselves in a world brimming with mysteries and enchantment.")

branch("love_dialogue_1")
    episode("Ep liove - A Mysterious Beginning")
        text("Their heart raced, emotions intertwining like ivy as they mustered the courage to speak.")
        text("I... I love you, Kizuna. The words hung in the air, delicate and charged, as if the world itself held its breath.")

branch("rejection")
    text("The moment was fragile, like a delicate petal caught in the wind.")
    text("I'm sorry, Kizuna. I can't reciprocate the way you feel," they replied gently, hoping their honesty wouldn't shatter the connection they had begun to weave.")
    choice("I love you Kizuna", "Reject Kizuna", "Be my girlfriend", "We break up", "Ignore Kizuna") => ("love_dialogue_1", "rejection", "love_dialogue_2", "end", "move")

branch("love_dialogue_2")
    text("The silence between them felt heavy with unspoken words, a tapestry of curiosity and longing.")
    text("They wished they could express their feelings, but fear held them back, like a hesitant traveler on an unfamiliar path.")

branch("end")
    text("The end. You lose.")

text("This is a test.")

end()

So It has to work like:

Find title - print It
find author - print It
find start() start reading novel by finding episodes or text
Make some beautifull marking if this in episode or text or a new branch
if the branch is finisdhed go reading the novel but skip if text in the branch
if there a choice map name to coresponding branch, and after a choice go to the branch and repeat logic AnimationPlaybackEvent
Note: there can be multiple choices
If you found end() end the novel